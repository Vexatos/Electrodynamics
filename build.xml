<project name="Electrodynamics" default="install" basedir=".">

    <property environment="env"/>


    <!-- Versions -->
    <property name="build.ver" value="0.0.1"/>
    <property name="fullversion" value="${build.ver}-${env.BUILD_NUMBER}"/>
	
	<property name="ccapi.version" value="1.56"/>

    <property name="mcp.version" value="805"/>
    <property name="minecraft.version" value="1.6.2"/>
    <property name="forgemajor.version" value="9.10.1"/>
    <property name="forgebuild" value="862"/>

    <property name="forge.version" value="${minecraft.version}-${forgemajor.version}.${forgebuild}"/>
    <property name="forgeant.version" value="${forgemajor.version}.${forgebuild}"/>


    <!-- Directories -->
    <property name="download.dir" value="downloads"/>
    <property name="src.dir" value="common"/>
    <property name="build.dir" value="build/${minecraft.version}"/>
    <property name="classes.dir" value="${build.dir}/packaging"/>
    <property name="devclasses.dir" value="${build.dir}/packaging-dev"/>
    <property name="forge.dir" value="${build.dir}/forge"/>
    <property name="dist.dir" value="dist"/>
    <property name="mcp.dir" value="${forge.dir}/mcp"/>
    <property name="mcplib.dir" value="${mcp.dir}/lib"/>
    <property name="mcpsrc.dir" value="${mcp.dir}/src/minecraft"/>
    <property name="resources.dir" value="resources/assets/electrodynamics"/>

    <!-- URLs -->
    <property name="forge.url" value="http://files.minecraftforge.net/minecraftforge/minecraftforge-src-${forge.version}.zip"/>
    <property name="apisource.url" value="http://royalixor.com/"/>

    <!-- Name -->
    <property name="package.meta-inf" value="META-INF"/>


    <!-- Version Checking -->

    <property file="${forge.dir}/forgeversion.properties"/>
    <condition property="forge-already-installed">
        <equals arg1="${forge.build.number}" arg2="${forgebuild}"/>
    </condition>
    <available property="forge-exists" file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>

    <mkdir dir="${download.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <mkdir dir="build"/>
    <mkdir dir="${build.dir}"/>


    <condition property="should-download-ant-contrib">
        <or>
            <available file="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
            <available file="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
        </or>
    </condition>

    <macrodef name="get-api">
        <attribute name="filename"/>
        <attribute name="into"/>
        <sequential>
            <echo message="Downloading @{filename}... "/>
            <get src="${apisource.url}/@{filename}" dest="${download.dir}/@{filename}"/>

            <echo message="Extracting @{filename}... "/>
            <mkdir dir="@{into}"/>
            <unzip src="${download.dir}/@{filename}" dest="@{into}"/>
        </sequential>
    </macrodef>

    <!-- Dependencies -->
    <target name="extract-apis" depends="setup-forge">
		<get-api filename="ComputerCraft-api_${ccapi.version}.zip" into="${download.dir}"/>
		<mkdir dir="${mcpsrc.dir}/dan200/turtle/api"/>
		<mkdir dir="${mcpsrc.dir}/dan200/computer/api"/>
		<move todir="${mcpsrc.dir}/dan200/turtle/api/">
			<fileset dir="${download.dir}/src/dan200/turtle/api/"/>
		</move>
		<move todir="${mcpsrc.dir}/dan200/computer/api/">
			<fileset dir="${download.dir}/src/dan200/computer/api/"/>
		</move>
    </target>

    <target name="update-names" depends="copy-source">
        <get src="http://mcpold.ocean-labs.de/files/mcptest/methods.csv" dest="${mcp.dir}/conf/methods.csv"/>
        <get src="http://mcpold.ocean-labs.de/files/mcptest/fields.csv" dest="${mcp.dir}/conf/fields.csv"/>

        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
            <arg line="/c updatenames.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="bash" osfamily="unix" failonerror="true">
            <arg value="-c"/>
            <arg value="echo Yes | ./updatenames.sh"/>
        </exec>
    </target>

    <target name="install" depends="build">
        <delete>
            <fileset dir="${dist.dir}">
                <include name="Electrodynamics-${minecraft.version}-*"/>
            </fileset>
        </delete>
		
        <jar destfile="${dist.dir}/Electrodynamics-${minecraft.version}-${fullversion}.jar" basedir="${classes.dir}"/>
        <delete dir="${classes.dir}"/>
        <jar destfile="${dist.dir}/Electrodynamics-dev-${fullversion}.jar" basedir="${devclasses.dir}"/>
        <delete dir="${devclasses.dir}"/>
    </target>

    <target name="rebuild" depends="clean,install">
    </target>

    <target name="forgeinstalled.check">
    </target>

    <target name="copy-source">
        <delete dir="${mcpsrc.dir}/electrodynamics"/>
        <copy todir="${mcpsrc.dir}/electrodynamics">
            <fileset dir="${src.dir}/electrodynamics"/>
            <filterset>
                <filter token="MOD_VERSION" value="${fullversion}"/>
                <filter token="MC_VERSION" value="${minecraft.version}"/>
                <filter token="DEPENDENCIES"
                        value="*/ dependencies = &quot;required-after:Forge@[${forgeant.version},);after:IC2&quot;, /*"/>
            </filterset>
        </copy>
    </target>

    <target name="build" depends="extract-apis,copy-source,update-names" unless="already-compiled">

        <exec dir="${mcp.dir}/conf" executable="sh" osfamily="unix" failonerror="false">
            <arg value="scalapatch.sh"/>
        </exec>


        <!-- Recompile -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows" failonerror="true">
            <arg line="/c recompile.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix" failonerror="true">
            <arg value="recompile.sh"/>
        </exec>

        <!-- Reobfuscation -->
        <exec dir="${mcp.dir}" executable="cmd" osfamily="windows">
            <arg line="/c reobfuscate_srg.bat"/>
        </exec>

        <exec dir="${mcp.dir}" executable="sh" osfamily="unix">
            <arg value="reobfuscate_srg.sh"/>
        </exec>

        <copy todir="${classes.dir}">
            <fileset dir="${mcp.dir}/reobf/minecraft"/>
        </copy>

        <mkdir dir="${devclasses.dir}/electrodynamics"/>
        <copy todir="${devclasses.dir}/electrodynamics">
            <fileset dir="${mcp.dir}/bin/minecraft/electrodynamics/"/>
        </copy>

        <copy todir="${classes.dir}" file="pack.mcmeta">
            <filterset>
                <filter token="MC_VERSION" value="${minecraft.version}"/>
                <filter token="MOD_VERSION" value="${fullversion}"/>
            </filterset>
        </copy>

        <copy todir="${classes.dir}" file="mcmod.info">
            <filterset>
                <filter token="MC_VERSION" value="${minecraft.version}"/>
                <filter token="MOD_VERSION" value="${fullversion}"/>
            </filterset>
        </copy>
    </target>

    <target name="setup-forge" depends="download-forge" unless="forge-already-installed">

        <unzip dest="${build.dir}">
            <fileset dir="${download.dir}">
                <include name="minecraftforge-src-${forge.version}.zip"/>
            </fileset>
        </unzip>


        <!-- Change executables' permitions -->

        <chmod file="${forge.dir}/install.sh" perm="+x"/>

        <!-- if your building on OSX these 2 should be executable -->


        <!-- Install forge -->
        <delete dir="${mcp.dir}" failonerror="no"/>
        <exec dir="${forge.dir}" executable="cmd" osfamily="windows" inputstring="Yes\n">
            <arg line="/c install.cmd"/>
        </exec>

        <exec dir="${forge.dir}" executable="sh" osfamily="unix" inputstring="Yes\n">
            <arg value="install.sh"/>

        </exec>


        <chmod file="${mcp.dir}/updatemd5.sh" perm="+x"/>
        <chmod file="${mcp.dir}/recompile.sh" perm="+x"/>
        <chmod file="${mcp.dir}/reobfuscate.sh" perm="+x"/>
        <chmod file="${mcp.dir}/runtime/bin/astyle-osx" perm="+x"/>
        <chmod file="${mcp.dir}/runtime/bin/jad-osx" perm="+x"/>
        <mkdir dir="${mcpsrc.dir}/electrodynamics"/>

    </target>

    <target name="download-forge" depends="download-ant-contrib" unless="forge-exists">
        <taskdef resource="net/sf/antcontrib/antlib.xml">
            <classpath>
                <pathelement location="${download.dir}/ant-contrib/ant-contrib-1.0b3.jar"/>
                <fileset dir="${download.dir}/ant-contrib/lib">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </taskdef>
        <echo message="Downloading forge... "/>

        <get src="${apisource.url}/minecraftforge-src-${forge.version}.zip"
             dest="${download.dir}/minecraftforge-src-${forge.version}.zip"/>
    </target>

    <target name="download-ant-contrib" unless="should-download-ant-contrib">
        <echo message="Getting: ant-contrib"/>
        <mkdir dir="${download.dir}/tmp"/>
        <mkdir dir="${download.dir}/ant-contrib/lib"/>
        <get src="http://sourceforge.net/projects/ant-contrib/files/ant-contrib/1.0b3/ant-contrib-1.0b3-bin.zip/download"
             dest="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip"/>
        <get src="http://archive.apache.org/dist/commons/codec/binaries/commons-codec-1.6-bin.zip"
             dest="${download.dir}/tmp/commons-codec-1.6-bin.zip"/>

        <unzip src="${download.dir}/tmp/ant-contrib-1.0b3-bin.zip" dest="${download.dir}"/>
        <unzip src="${download.dir}/tmp/commons-codec-1.6-bin.zip" dest="${download.dir}/tmp"/>

        <move todir="${download.dir}/ant-contrib/lib">
            <fileset file="${download.dir}/tmp/commons-codec-1.6/commons-codec-1.6.jar"/>
        </move>

        <!-- Delete useless files -->
        <delete dir="${download.dir}/ant-contrib/docs"/>
        <delete dir="${download.dir}/tmp"/>

    </target>

    <target name="clean">
        <delete dir="${build.dir}"/>
        <delete dir="${download.dir}"/>
    </target>


</project>
