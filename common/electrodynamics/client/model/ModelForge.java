package electrodynamics.client.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;

public class ModelForge extends ModelBase {

	ModelRenderer forgeBottom;
	ModelRenderer forgeRack;
	ModelRenderer rightCornerB2;
	ModelRenderer leftCornerB2;
	ModelRenderer leftCornerTop;
	ModelRenderer rightCornerTop;
	ModelRenderer rightCornerB;
	ModelRenderer leftCornerB;
	ModelRenderer bar1;
	ModelRenderer bar2;
	ModelRenderer bar4;
	ModelRenderer bar3;
	ModelRenderer forgeFrontMiddle;
	ModelRenderer forgeFrontTop;
	ModelRenderer forgeRightTop;
	ModelRenderer forgeRightB;
	ModelRenderer forgeLeftB;
	ModelRenderer forgeLeftTop;
	ModelRenderer forgeTop;
	ModelRenderer forgeBackTop;
	ModelRenderer forgeBackB;
	ModelRenderer vent4;
	ModelRenderer vent3;
	ModelRenderer vent2;
	ModelRenderer vent1;

	public ModelForge() {
		textureWidth = 128;
		textureHeight = 64;

		forgeBottom = new ModelRenderer(this, 64, 13);
		forgeBottom.addBox(0F, 0F, 0F, 16, 1, 16);
		forgeBottom.setRotationPoint(-8F, 23F, -8F);
		forgeBottom.setTextureSize(128, 64);
		forgeBottom.mirror = true;
		setRotation(forgeBottom, 0F, 0F, 0F);
		forgeRack = new ModelRenderer(this, 40, 0);
		forgeRack.addBox(0F, 0F, 0F, 8, 1, 12);
		forgeRack.setRotationPoint(-4F, 15.5F, -6F);
		forgeRack.setTextureSize(128, 64);
		forgeRack.mirror = true;
		setRotation(forgeRack, 0F, 0F, 0F);
		rightCornerB2 = new ModelRenderer(this, 6, 3);
		rightCornerB2.addBox(0F, 0F, 0F, 1, 1, 2);
		rightCornerB2.setRotationPoint(4F, 20F, -8F);
		rightCornerB2.setTextureSize(128, 64);
		rightCornerB2.mirror = true;
		setRotation(rightCornerB2, 0F, 0F, 0F);
		leftCornerB2 = new ModelRenderer(this, 6, 3);
		leftCornerB2.addBox(0F, 0F, 0F, 1, 1, 2);
		leftCornerB2.setRotationPoint(-5F, 20F, -8F);
		leftCornerB2.setTextureSize(128, 64);
		leftCornerB2.mirror = true;
		setRotation(leftCornerB2, 0F, 0F, 0F);
		leftCornerTop = new ModelRenderer(this, 6, 0);
		leftCornerTop.addBox(0F, 0F, 0F, 1, 1, 2);
		leftCornerTop.setRotationPoint(-4F, 12F, -8F);
		leftCornerTop.setTextureSize(128, 64);
		leftCornerTop.mirror = true;
		setRotation(leftCornerTop, 0F, 0F, 0F);
		rightCornerTop = new ModelRenderer(this, 6, 0);
		rightCornerTop.addBox(0F, 0F, 0F, 1, 1, 2);
		rightCornerTop.setRotationPoint(3F, 12F, -8F);
		rightCornerTop.setTextureSize(128, 64);
		rightCornerTop.mirror = true;
		setRotation(rightCornerTop, 0F, 0F, 0F);
		rightCornerB = new ModelRenderer(this, 0, 8);
		rightCornerB.addBox(0F, 0F, 0F, 3, 1, 2);
		rightCornerB.setRotationPoint(2F, 19F, -8F);
		rightCornerB.setTextureSize(128, 64);
		rightCornerB.mirror = true;
		setRotation(rightCornerB, 0F, 0F, 0F);
		rightCornerB.mirror = false;
		leftCornerB = new ModelRenderer(this, 0, 8);
		leftCornerB.addBox(0F, 0F, 0F, 3, 1, 2);
		leftCornerB.setRotationPoint(-5F, 19F, -8F);
		leftCornerB.setTextureSize(128, 64);
		leftCornerB.mirror = true;
		setRotation(leftCornerB, 0F, 0F, 0F);
		bar1 = new ModelRenderer(this, 0, 3);
		bar1.addBox(0F, 0F, 0F, 1, 4, 1);
		bar1.setRotationPoint(-3.5F, 19F, -7.5F);
		bar1.setTextureSize(128, 64);
		bar1.mirror = true;
		setRotation(bar1, 0F, 0F, 0F);
		bar2 = new ModelRenderer(this, 0, 3);
		bar2.addBox(0F, 0F, 0F, 1, 4, 1);
		bar2.setRotationPoint(0.5F, 19F, -7.5F);
		bar2.setTextureSize(128, 64);
		bar2.mirror = true;
		setRotation(bar2, 0F, 0F, 0F);
		bar4 = new ModelRenderer(this, 0, 3);
		bar4.addBox(0F, 0F, 0F, 1, 4, 1);
		bar4.setRotationPoint(2.5F, 19F, -7.5F);
		bar4.setTextureSize(128, 64);
		bar4.mirror = true;
		setRotation(bar4, 0F, 0F, 0F);
		bar3 = new ModelRenderer(this, 0, 3);
		bar3.addBox(0F, 0F, 0F, 1, 4, 1);
		bar3.setRotationPoint(-1.5F, 19F, -7.5F);
		bar3.setTextureSize(128, 64);
		bar3.mirror = true;
		setRotation(bar3, 0F, 0F, 0F);
		forgeFrontMiddle = new ModelRenderer(this, 28, 5);
		forgeFrontMiddle.addBox(0F, 0F, 0F, 8, 4, 2);
		forgeFrontMiddle.setRotationPoint(-4F, 15F, -8F);
		forgeFrontMiddle.setTextureSize(128, 64);
		forgeFrontMiddle.mirror = true;
		setRotation(forgeFrontMiddle, 0F, 0F, 0F);
		forgeFrontTop = new ModelRenderer(this, 28, 0);
		forgeFrontTop.addBox(0F, 0F, 0F, 8, 2, 2);
		forgeFrontTop.setRotationPoint(-4F, 10F, -8F);
		forgeFrontTop.setTextureSize(128, 64);
		forgeFrontTop.mirror = true;
		setRotation(forgeFrontTop, 0F, 0F, 0F);
		forgeRightTop = new ModelRenderer(this, 40, 14);
		forgeRightTop.addBox(0F, 0F, 0F, 4, 11, 16);
		forgeRightTop.setRotationPoint(4F, 8F, -8F);
		forgeRightTop.setTextureSize(128, 64);
		forgeRightTop.mirror = true;
		setRotation(forgeRightTop, 0F, 0F, 0F);
		forgeRightB = new ModelRenderer(this, 38, 41);
		forgeRightB.addBox(0F, 0F, 0F, 3, 4, 16);
		forgeRightB.setRotationPoint(5F, 19F, -8F);
		forgeRightB.setTextureSize(128, 64);
		forgeRightB.mirror = true;
		setRotation(forgeRightB, 0F, 0F, 0F);
		forgeLeftB = new ModelRenderer(this, 0, 41);
		forgeLeftB.addBox(0F, 0F, 0F, 3, 4, 16);
		forgeLeftB.setRotationPoint(-8F, 19F, -8F);
		forgeLeftB.setTextureSize(128, 64);
		forgeLeftB.mirror = true;
		setRotation(forgeLeftB, 0F, 0F, 0F);
		forgeLeftTop = new ModelRenderer(this, 0, 14);
		forgeLeftTop.addBox(0F, 0F, 0F, 4, 11, 16);
		forgeLeftTop.setRotationPoint(-8F, 8F, -8F);
		forgeLeftTop.setTextureSize(128, 64);
		forgeLeftTop.mirror = true;
		setRotation(forgeLeftTop, 0F, 0F, 0F);
		forgeTop = new ModelRenderer(this, 0, 0);
		forgeTop.addBox(0F, 0F, 0F, 8, 2, 12);
		forgeTop.setRotationPoint(-4F, 8F, -8F);
		forgeTop.setTextureSize(128, 64);
		forgeTop.mirror = true;
		setRotation(forgeTop, 0F, 0F, 0F);
		forgeBackTop = new ModelRenderer(this, 24, 17);
		forgeBackTop.addBox(0F, 0F, 0F, 8, 11, 2);
		forgeBackTop.setRotationPoint(-4F, 8F, 6F);
		forgeBackTop.setTextureSize(128, 64);
		forgeBackTop.mirror = true;
		setRotation(forgeBackTop, 0F, 0F, 0F);
		forgeBackB = new ModelRenderer(this, 22, 41);
		forgeBackB.addBox(0F, 0F, 0F, 10, 4, 2);
		forgeBackB.setRotationPoint(-5F, 19F, 6F);
		forgeBackB.setTextureSize(128, 64);
		forgeBackB.mirror = true;
		setRotation(forgeBackB, 0F, 0F, 0F);
		vent4 = new ModelRenderer(this, 0, 0);
		vent4.addBox(0F, 0F, 0F, 1, 1, 2);
		vent4.setRotationPoint(2.5F, 8.2F, 4F);
		vent4.setTextureSize(128, 64);
		vent4.mirror = true;
		setRotation(vent4, 0F, 0F, 0F);
		vent3 = new ModelRenderer(this, 0, 0);
		vent3.addBox(0F, 0F, 0F, 1, 1, 2);
		vent3.setRotationPoint(0.5F, 8.2F, 4F);
		vent3.setTextureSize(128, 64);
		vent3.mirror = true;
		setRotation(vent3, 0F, 0F, 0F);
		vent2 = new ModelRenderer(this, 0, 0);
		vent2.addBox(0F, 0F, 0F, 1, 1, 2);
		vent2.setRotationPoint(-1.5F, 8.2F, 4F);
		vent2.setTextureSize(128, 64);
		vent2.mirror = true;
		setRotation(vent2, 0F, 0F, 0F);
		vent1 = new ModelRenderer(this, 0, 0);
		vent1.addBox(0F, 0F, 0F, 1, 1, 2);
		vent1.setRotationPoint(-3.5F, 8.2F, 4F);
		vent1.setTextureSize(128, 64);
		vent1.mirror = true;
		setRotation(vent1, 0F, 0F, 0F);
	}

	public void render(float f5) {
		forgeBottom.render(f5);
		forgeRack.render(f5);
		rightCornerB2.render(f5);
		leftCornerB2.render(f5);
		leftCornerTop.render(f5);
		rightCornerTop.render(f5);
		rightCornerB.render(f5);
		leftCornerB.render(f5);
		bar1.render(f5);
		bar2.render(f5);
		bar4.render(f5);
		bar3.render(f5);
		forgeFrontMiddle.render(f5);
		forgeFrontTop.render(f5);
		forgeRightTop.render(f5);
		forgeRightB.render(f5);
		forgeLeftB.render(f5);
		forgeLeftTop.render(f5);
		forgeTop.render(f5);
		forgeBackTop.render(f5);
		forgeBackB.render(f5);
		vent4.render(f5);
		vent3.render(f5);
		vent2.render(f5);
		vent1.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

}
